'use strict'

import fs from 'fs'
import path from 'path'

let ledger = (log_name) => {
  let parentDir = path.dirname(module.parent.filename)
  ,   lname = path.resolve(parentDir, log_name) + '.log'

  let newLog = new log(lname)

  // make append the default function call
  ledger[log_name] = log.prototype.append.bind(newLog)

  // connect all prototype methods onto the log reference
  Object.getOwnPropertyNames(log.prototype).forEach(property => {
    ledger[log_name][property] = log.prototype[property].bind(newLog)
  })

  // no need to expose the constructor
  delete ledger[log_name].constructor

  return newLog.reset()
}

// used internally to manage the logs
class log {
  constructor(lname) {
    this.path = lname
  }
  
  append(data, callback) {
    fs.appendFile(this.path, data, 'utf8', callback)
  }

  reset(callback = () => {}) {
    return new Promise((resolve, reject) => {
      fs.writeFile(this.path, '', 'utf8', (err) => {
        err? reject() : resolve(this)
        callback(err)
      })
    })
  }
}

export default ledger
